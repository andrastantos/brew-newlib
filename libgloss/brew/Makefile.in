# Copyright (c) 2008, 2010 Anthony Green, 2022 Andras Tantos
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

# Makefile for libgloss/spro. This is the board support code for the
# brew target.

DESTDIR =
VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL = /bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@
AR_FLAGS = rc

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

LD_SCRIPTS = brew-elf-common.ld sim.ld

@BUILD_CRT0_TRUE@CRT0		= crt0.o
@BUILD_CRT0_TRUE@CRT0_INSTALL	= install-crt0
@BUILD_CRT0_FALSE@CRT0		=
@BUILD_CRT0_FALSE@CRT0_INSTALL	=

BREW_BSP = libbrew.a
BREW_OBJS = \
	exit.o \
	open.o \
	close.o \
	read.o \
	write.o \
	lseek.o \
	unlink.o \
	getpid.o \
	kill.o \
	fstat.o \
	chdir.o \
	stat.o \
	chmod.o \
	utime.o \
	time.o \
	gettimeofday.o \
	times.o \
	link.o \
	isatty.o \
	ioctl.o \
	sbrk.o \
	termios.o


BREW_INCLUDES =

BREW_SYS_INCLUDES = \
	termios.h \
	ioctl.h

#### Host specific Makefile fragment comes in here.
@host_makefile_frag@

all: ${CRT0} $(BREW_BSP)

$(BREW_BSP): $(BREW_OBJS)
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@

exit.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_exit -D SYSCALL_NO=SYS_exit -c $<
open.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_open -D SYSCALL_NO=SYS_open -c $<
close.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_close -D SYSCALL_NO=SYS_close -c $<
read.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_read -D SYSCALL_NO=SYS_read -c $<
write.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_write -D SYSCALL_NO=SYS_write -c $<
lseek.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_lseek -D SYSCALL_NO=SYS_lseek -c $<
unlink.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_unlink -D SYSCALL_NO=SYS_unlink -c $<
getpid.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_getpid -D SYSCALL_NO=SYS_getpid -c $<
kill.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_kill -D SYSCALL_NO=SYS_kill -c $<
fstat.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_fstat -D SYSCALL_NO=SYS_fstat -c $<

chdir.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_chdir -D SYSCALL_NO=SYS_chdir -c $<
stat.o: $(srcdir)/stat.c
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_stat -D SYSCALL_NO=SYS_stat -c $<
chmod.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_chmod -D SYSCALL_NO=SYS_chmod -c $<
utime.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_utime -D SYSCALL_NO=SYS_utime -c $<
time.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_time -D SYSCALL_NO=SYS_time -c $<
gettimeofday.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_gettimeofday -D SYSCALL_NO=SYS_gettimeofday -c $<
times.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_times -D SYSCALL_NO=SYS_times -c $<
link.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_link -D SYSCALL_NO=SYS_link -c $<

isatty.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=_isatty -D SYSCALL_NO=BREW_isatty -c $<

ioctl.o: $(srcdir)/syscall-template.S
	$(CC) $(CFLAGS_FOR_TARGET) $(INCLUDES) $(CFLAGS) -o $@ -D FN_NAME=ioctl -D SYSCALL_NO=BREW_ioctl -c $<

sbrk.o: $(srcdir)/sbrk.c

termios.o: $(srcdir)/termios.c

install: ${CRT0_INSTALL} $($(CPU)_INSTALL)
	$(INSTALL_DATA) $(BREW_BSP) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(BREW_BSP)
	for x in ${LD_SCRIPTS}; do \
	  ${INSTALL_DATA} ${srcdir}/$$x $(DESTDIR)${tooldir}/lib/$$x; \
	done;
	for x in ${BREW_INCLUDES}; do \
	  ${INSTALL_DATA} ${srcdir}/$$x $(DESTDIR)${tooldir}/include/$$x; \
	done;
	for x in ${BREW_SYS_INCLUDES}; do \
	  ${INSTALL_DATA} ${srcdir}/$$x $(DESTDIR)${tooldir}/include/sys/$$x; \
	done;

install-crt0:
	${INSTALL_DATA} ${CRT0} $(DESTDIR)${tooldir}/lib${MULTISUBDIR}/$$x

clean mostlyclean:
	rm -f *.o *.a

distclean maintainer-clean realclean: clean
	rm -f Makefile config.cache config.log config.status

.PHONY: info dvi doc install-info clean-info
info doc dvi:
install-info:
clean-info:

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
